{"version":3,"sources":["Recipe.js","App.js","reportWebVitals.js","index.js","recipe.module.css"],"names":["Recipe","title","calories","image","ingredients","className","style","recipe","src","alt","map","ingredient","text","App","useState","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","getRecipes","a","fetch","response","json","data","hits","onSubmit","e","preventDefault","type","value","onChange","target","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"iQAoBeA,EAlBF,SAAC,GAAsC,IAArCC,EAAoC,EAApCA,MAAMC,EAA8B,EAA9BA,SAASC,EAAqB,EAArBA,MAAMC,EAAe,EAAfA,YAChC,OACI,sBAAKC,UAAWC,IAAMC,OAAtB,UACI,6BAAKN,IACL,8BAAG,0CAAH,IAAqBC,KACrB,qBAAKM,IAAKL,EAAOM,IAAI,KACrB,6CACA,6BACKL,EAAYM,KAAI,SAAAC,GAAU,OACvB,6BACKA,EAAWC,gBCyCrBC,G,MAlDL,WACR,IAEA,EAA6BC,mBAAS,IAAtC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAyBF,mBAAS,IAAlC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAuBJ,mBAAS,IAAhC,mBAAOK,EAAP,KAAaC,EAAb,KAEAC,qBAAU,WACRC,MACA,CAACH,IAGH,IAAMG,EAAU,uCAAC,8BAAAC,EAAA,sEACIC,MAAM,mCAAD,OAAoCL,EAApC,mBAZb,WAYa,oBAXZ,qCAUG,cACXM,EADW,gBAEAA,EAASC,OAFT,OAEXC,EAFW,OAGjBX,EAAWW,EAAKC,MAHC,2CAAD,qDAelB,OACE,sBAAKvB,UAAU,MAAf,UACE,uBAAMwB,SAPQ,SAAAC,GACdA,EAAEC,iBACFX,EAASH,GACTC,EAAU,KAIiBb,UAAU,cAArC,UACE,uBAAOA,UAAU,aAAa2B,KAAK,OAAOC,MAAOhB,EAAQiB,SAZ1C,SAAAJ,GACjBZ,EAAUY,EAAEK,OAAOF,UAYjB,wBAAQ5B,UAAU,gBAAgB2B,KAAK,SAAvC,uBAIF,qBAAK3B,UAAU,UAAf,SACCU,EAAQL,KAAI,SAAAH,GAAM,OACjB,cAAC,EAAD,CAEAN,MAAOM,EAAOA,OAAO6B,MACrBlC,SAAUK,EAAOA,OAAOL,SACxBC,MAAOI,EAAOA,OAAOJ,MACrBC,YAAaG,EAAOA,OAAOH,aAJtBG,EAAOA,OAAO6B,iBC7BVC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,OAAS,0B","file":"static/js/main.dc14353c.chunk.js","sourcesContent":["import React from 'react';\r\nimport style from './recipe.module.css';\r\nconst Recipe=({title,calories,image,ingredients})=>{\r\n    return(\r\n        <div className={style.recipe}>\r\n            <h2>{title}</h2>\r\n            <p><b>Calories:</b> {calories}</p>\r\n            <img src={image} alt=\"\"/>\r\n            <h2>Ingredients</h2>\r\n            <ol>\r\n                {ingredients.map(ingredient=>(\r\n                    <li>\r\n                        {ingredient.text}\r\n                    </li>\r\n                ))}\r\n            </ol>\r\n        </div>\r\n\r\n    );\r\n};\r\nexport default Recipe;","import React,{useEffect,useState} from 'react';\nimport Recipe from './Recipe';\nimport './App.css';\nconst App=()=>{\n  const APP_ID=\"a76fe93b\";\n  const APP_KEY=\"bb9daa58f1dbd049bda1d8ebb668771b\";\n  const [recipes , setRecipes]=useState([]);\n  const [search,setSearch]=useState(\"\");\n  const [query,setQuery]=useState(\"\");\n\n  useEffect(()=>{\n    getRecipes();\n  },[query]);\n\n\n  const getRecipes=async ()=>{\n  const response=await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`);\n  const data=await response.json();\n  setRecipes(data.hits);\n  };\n\n  const searchUpdate=e=>{\n    setSearch(e.target.value);\n  };\n\n  const getSearch=e=>{\n    e.preventDefault();\n    setQuery(search);\n    setSearch(\"\");\n  };\nreturn(\n  <div className=\"App\">\n    <form onSubmit={getSearch} className=\"search-form\">\n      <input className=\"search-bar\" type=\"text\" value={search} onChange={searchUpdate}/>\n      <button className=\"search-button\" type=\"submit\">\n       Search\n      </button>\n    </form>\n    <div className=\"recipes\" >\n    {recipes.map(recipe=>(\n      <Recipe \n      key={recipe.recipe.label}\n      title={recipe.recipe.label}\n      calories={recipe.recipe.calories}\n      image={recipe.recipe.image}\n      ingredients={recipe.recipe.ingredients}\n      />\n    ))}\n    </div>\n\n  </div>\n);\n};\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipe_recipe__2RTOn\"};"],"sourceRoot":""}